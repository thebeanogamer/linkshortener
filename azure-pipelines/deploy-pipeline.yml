trigger:
- master

pr: none

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm
  PIP_CACHE_DIR: $(Pipeline.Workspace)/.pip

jobs:
- job: Deploy
  displayName: Deploy

  pool:
    vmImage: Ubuntu 18.04

  steps:
  - task: NodeTool@0
    displayName: 'Use Node 12.x'
    inputs:
      versionSpec: 12.x

  - task: UsePythonVersion@0
    displayName: Use Python 3.8
    inputs:
      versionSpec: 3.8.x
      addToPath: true

  - task: Cache@2
    inputs:
      key: 'npm | "$(Agent.OS)" | package-lock.json'
      restoreKeys: |
        npm | "$(Agent.OS)"
      path: $(npm_config_cache)
    displayName: Cache npm

  - task: Cache@2
    inputs:
      key: 'python | "$(Agent.OS)" | poetry.lock'
      restoreKeys: | 
        python | "$(Agent.OS)"
        python
      path: $(PIP_PATH_CACHE)
    displayName: Cache pip packages

  - task: Npm@1
    displayName: 'Install Node Packages'
    inputs:
      workingDir: '$(System.DefaultWorkingDirectory)'
      verbose: true

  - script: curl -sSL https://raw.githubusercontent.com/sdispater/poetry/master/get-poetry.py | python
    displayName: Install Poetry

  - script: $HOME/.poetry/bin/poetry export -f requirements.txt -o $(System.DefaultWorkingDirectory)/requirements.txt
    displayName: Generate Requirements

  - script: '$(System.DefaultWorkingDirectory)/node_modules/.bin/serverless deploy --conceal --stage prod'
    displayName: 'Deploy with Serverless Framework'
    env:
      AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
      AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      SERVERLESS_ACCESS_KEY: $(SERVERLESS_ACCESS_KEY)
      ADMIN_CONTACT: $(ADMIN_CONTACT)
